service: earthdata-search

provider:
  name: aws
  runtime: nodejs8.10
  versionFunctions: false
  stage: ${opt:stage, 'lab'}
  region: us-east-1
  endpointType: PRIVATE
  memorySize: 256
  environment:
    dbEndpoint:
      Fn::GetAtt:
        - Database
        - Endpoint.Address
    dbPort:
      Fn::GetAtt:
        - Database
        - Endpoint.Port
    dbUsername: edsc
    dbName: edsc_${self:provider.stage}

    colorMapQueueUrl:
      Ref: ColorMapsProcessingQueue
    tagQueueUrl:
      Ref: TagProcessingQueue
    legacyServicesQueueUrl:
      Ref: LegacyServicesOrderQueue
    catalogRestQueueUrl:
      Ref: CatalogRestOrderQueue
    optionDefinitionQueueUrl:
      Ref: OptionDefinitionsQueue

    obfuscationSpin: ${env:OBFUSCATION_SPIN}

    configSecretId:
      Ref: DbPasswordSecret

    storeUserLambda: ${self:custom.siteName}-storeUserData
    collectionCapabilitiesLambda: ${self:custom.siteName}-generateCollectionCapabilityTags

  vpc:
    securityGroupIds:
      - Ref: LambdaSecurityGroup
    subnetIds:
      - ${self:custom.awsResources.subnet.a}
      - ${self:custom.awsResources.subnet.b}
  role: EDSCLambdaRole

plugins:
  - serverless-finch
  - serverless-plugin-warmup
  - serverless-offline
  - serverless-webpack
  - serverless-step-functions

#
# Lambda Functions
#
functions: ${file(./serverless-configs/${self:provider.name}-functions.yml)}

#
# Additional AWS Resources
#
resources: ${file(./serverless-configs/${self:provider.name}-resources.yml)}

#
# Step functions to manage order status jobs
#
stepFunctions: ${file(./serverless-configs/${self:provider.name}-step-functions.yml)}

# Package each lambda into individual zip files. This reduces the size of
# each lambda but increases the complexity of the compilation process slightly
package:
  individually: false

custom:
  siteName: earthdata-search-${self:provider.stage}

  awsResources:
    vpc: ${env:VPC_ID}
    subnet:
      a: ${env:SUBNET_ID_A}
      b: ${env:SUBNET_ID_B}

  # Finch (S3 sync plugin)
  client:
    bucketName: ${self:custom.siteName}
    distributionFolder: static/dist

    # Prevent the plugin from attempting to change the bucket policy
    manageResources: false

  # Default is 3000 so to avoid conflicts with rails applications we'll define a new port
  serverless-offline:
    port: 3001

  # Serverless Webpack configurations
  webpack:
    webpackConfig: 'serverless.webpack.config.js'
    includeModules: true
    packager: 'npm'
    excludeFiles: src/**/*.test.js

  warmup:
    enabled: true
    role: EDSCLambdaRole
    prewarm: true
    timeout: 30
    events: 
      - schedule: 'cron(0/20 8-22 ? * MON-FRI *)'
