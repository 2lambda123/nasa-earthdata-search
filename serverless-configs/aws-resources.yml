Resources:
  # SQS Queue to process Color Map entries
  ColorMapsProcessingQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      MessageRetentionPeriod: 345600 # Default value, leaving for visibility
      VisibilityTimeout: 300

  TagProcessingQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      VisibilityTimeout: 300

  LegacyServicesOrderQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      VisibilityTimeout: 600
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
            - LegacyServicesOrderDeadLetterQueue
            - Arn
        maxReceiveCount: 2 # Number of times a message will be tried before being dumped to the DLQ

  LegacyServicesOrderDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: ${self:custom.siteName}-LegacyServicesOrderDeadLetterQueue
      MessageRetentionPeriod: 1209600

  CatalogRestOrderQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      VisibilityTimeout: 600 # Give orders a full day to complete
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
            - CatalogRestOrderDeadLetterQueue
            - Arn
        maxReceiveCount: 2 # Number of times a message will be tried before being dumped to the DLQ

  CatalogRestOrderDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: ${self:custom.siteName}-CatalogRestOrderDeadLetterQueue
      MessageRetentionPeriod: 1209600

  OptionDefinitionsQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      VisibilityTimeout: 3600
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
            - OptionDefinitionDeadLetterQueue
            - Arn
        maxReceiveCount: 2 # Number of times a message will be tried before being dumped to the DLQ

  OrderStatusQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      VisibilityTimeout: 300

  OptionDefinitionDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: ${self:custom.siteName}-OptionDefinitionDeadLetterQueue
      MessageRetentionPeriod: 1209600

  UserDataQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      VisibilityTimeout: 300

  GatewayResponseDefault4XX:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      ResponseParameters:
        gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
        gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
      ResponseType: DEFAULT_4XX
      RestApiId:
        Ref: ApiGatewayRestApi

  GatewayResponseDefault5XX:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      ResponseParameters:
        gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
        gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
      ResponseType: DEFAULT_5XX
      RestApiId:
        Ref: ApiGatewayRestApi

Outputs:
  UpdateOrderStatusWorkflow:
    Description: ARN of the order status step function workflow
    Value:
      Ref: UpdateOrderStatusWorkflowDash${self:provider.stage}
